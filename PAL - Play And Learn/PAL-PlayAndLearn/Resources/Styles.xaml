<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
                    xmlns:local="clr-namespace:PAL_PlayAndLearn.Behavior"
                    x:Class="PAL_PlayAndLearn.Pages.ContextMenuClick"
                    
                    x:ClassModifier="public">
    
    <!--ContextMenu/MenuItem Styles-->

    <Style x:Key="ContextMenuStyle" TargetType="{x:Type ContextMenu}" >
        <Setter Property="Background" Value="White"></Setter>
        <Setter Property="Padding" Value="2"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderThickness="1" BorderBrush="#33000000" CornerRadius="5" Background="White" VerticalAlignment="Center" Padding="1">
                        <StackPanel IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContextMenuItem" TargetType="{x:Type MenuItem}">
        <Setter Property="MenuItem.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="White" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{TemplateBinding MenuItem.Header}" 
                                   Foreground="#333333" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Stretch"
                                   Grid.Column="0"
                                   Style="{StaticResource FontAwesome}"
                                   FontSize="18"
                                   FontWeight="SemiBold"
                                   x:Name="MenuItem"
                                   Background="White"
                                   Padding="5,0,5,0"
                                   Margin="0,5,0,5"></TextBlock>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.Setters>
                                <Setter Property="Background" TargetName="MenuItem" Value="#007fbe"/>
                                <Setter Property="Foreground" TargetName="MenuItem" Value="White"/>
                                <Setter Property="Margin" TargetName="MenuItem" Value="-1,5,-1,5"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End ContextMenu/MenuItem Styles-->

    <!--Separator Style-->
    
    <Style x:Key="MySeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border 
                        BorderBrush="#ccc" 
                        BorderThickness="1" 
                        Background="White" 
                        SnapsToDevicePixels="true"
                        Margin="-1,5,-1,5"
                        Padding="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End Separator Style-->
    
    
    <!--TextBlock/TextBox Styles-->

    <Style x:Key="TextBlockUnderlineText" TargetType="TextBlock">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GamePageListViewTextBlock"  TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline" />
                <Setter Property="Cursor" Value="Hand"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--End TextBlock/TextBox Styles-->
    
    <!--Label Styles-->

    <Style x:Key="ProfileContentCurrentSelected" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Resources/#Kelson Sans Light BG"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <StackPanel Background="#137FB2">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,0,0"/>
                        <Path Fill="White" Data="M 0 10 L 10 20 L 10 0 Z" HorizontalAlignment="Right" Margin="0,-22,0,0"/>
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TestQuestionLabel"  TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,30,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle HorizontalAlignment="Stretch" Height="2" Fill="White" Grid.Column="0" Margin="0,2,0,0"/>
                        <Polyline Points="12,50 35, 11 60,50"
                                                                  StrokeThickness="2"
                                                                  Stroke="White" 
                                                                  Fill="#009be4" 
                                                                  Grid.Column="1" 
                                                                  Margin="-11,62,-11,-61">
                            <Polyline.RenderTransform>
                                <RotateTransform Angle="270"/>
                            </Polyline.RenderTransform>
                        </Polyline>
                        <Border Grid.Column="2" BorderThickness="0,2,0,2" BorderBrush="White" Height="50" Background="#009be4">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <Polyline Points="12,50 35, 11 60,50"
                                                                  StrokeThickness="2"
                                                                  Stroke="White" 
                                                                  Fill="#009be4" 
                                                                  Grid.Column="3" 
                                                                  Margin="49,-10,-72,0">
                            <Polyline.RenderTransform>
                                <RotateTransform Angle="90"/>
                            </Polyline.RenderTransform>
                        </Polyline>
                        <Rectangle HorizontalAlignment="Stretch" Height="2" Fill="White" Grid.Column="4" Margin="0,-2,0,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#003650"/>
        <Setter Property="FontSize" Value="21"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontFamily" Value="/Resources/#Rex"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="15" BorderThickness="0,2,0,0" BorderBrush="#0080bd">
                        <Border CornerRadius="15" BorderThickness="2,0,2,0" BorderBrush="#0090d4">
                            <Border CornerRadius="15" BorderThickness="0,0,0,1" BorderBrush="#00adff">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*"/>
                                        <RowDefinition Height="0.5*"/>
                                    </Grid.RowDefinitions>
                                    <ContentPresenter VerticalAlignment="Center" Grid.RowSpan="2" HorizontalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--End Label Styles-->

    <!--ListView-->

    <Style x:Key="LvItemStyle" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" BorderBrush="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewItemStyleSBJNames" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" BorderBrush="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="border" BorderBrush="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <StackPanel HorizontalAlignment="Stretch">
                                    <ContentPresenter VerticalAlignment="Center"/>
                                    <Path Fill="White" Data="M 0 10 L 10 20 L 10 0 Z" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,-42,0,0"/>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListViewItemStyleQuestions" TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="border" BorderBrush="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ListViewNewTemplate" TargetType="{x:Type ListBox}">
        <Border x:Name="Bd" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--End ListView-->

    <!--Scroll Bar-->
    
    <SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="#FF868686" BorderThickness="0,0,0,0" Height="Auto" CornerRadius="5" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="AppleStyleHorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="True" Height="10" Margin="0" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="5"
                                Background="#c0c0c0">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumb}" Background="Gray" Cursor="Hand"/>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="AppleStyleVerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="10" HorizontalAlignment="Right" Margin="0">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="5"
                                Background="#c0c0c0">
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{DynamicResource ScrollBarThumb}" Background="Gray" Cursor="Hand"/>
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <ControlTemplate x:Key="AppleStyleScrollBarStyle" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{x:Null}" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}"  
                      CanHorizontallyScroll="False" CanVerticallyScroll="False"  
                      ContentTemplate="{TemplateBinding ContentTemplate}"   
                      Content="{TemplateBinding Content}" Grid.Column="0"   
                      Margin="{TemplateBinding Padding}" Grid.Row="0"/>
            <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"   
              AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1"   
              Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0"   
              Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
              ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource AppleStyleVerticalScrollBarStyle}"   
              Background="{x:Null}" Width="Auto" Margin="-20,15,3,15"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"   
              AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0"   
              Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1"   
              Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"   
              ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource AppleStyleHorizontalScrollBarStyle}"
              Background="{x:Null}" Width="Auto" Margin="15,-20,15,3"/>
        </Grid>
    </ControlTemplate>
    
    <!--End Scroll Bar-->
    
    
    <!--Buttons Styles-->
    
    <Style x:Key="ShowQuestionsButton"  TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Margin" Value="0,15,0,15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="#ff6f0f" Height="30" Background="#009be4" CornerRadius="4">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Direction="270" Color="#ff7b23" ShadowDepth="3" Softness="0"/>
                            </Border.BitmapEffect>
                        </Border>
                        <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0,5,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="0,17,0,13"/>
                            <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="QuitTestButton"  TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5,10,5"/>
        <Setter Property="Margin" Value="0,15,0,15"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="#ff0000" Height="30" Background="#009be4" CornerRadius="4">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Direction="270" Color="#b60000" ShadowDepth="3" Softness="0"/>
                            </Border.BitmapEffect>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="5,0,5,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="0,17,0,13"/>
                            <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAnswerThree" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,15,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="White" Height="30" Background="#009be4" CornerRadius="15">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Direction="270" Color="#4db4e5" ShadowDepth="3" Softness="0"/>
                            </Border.BitmapEffect>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,0,8,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="0,17,0,3"/>
                            <Setter Property="BorderBrush" Value="Orange" TargetName="ButtonBorder"/>
                            <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding AnswerThree}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonAnswerFour" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,15,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="White" Height="30" Background="#009be4" CornerRadius="15">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Direction="270" Color="#4db4e5" ShadowDepth="3" Softness="0"/>
                            </Border.BitmapEffect>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,0,8,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="0,17,0,3"/>
                            <Setter Property="BorderBrush" Value="Orange" TargetName="ButtonBorder"/>
                            <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding AnswerFour}" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonNoEffect" TargetType="{x:Type Button}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ComboButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="20" BorderThickness="0,2,0,0" BorderBrush="#0080bd">
                        <Border CornerRadius="20" BorderThickness="2,0,2,0" BorderBrush="#0090d4">
                            <Border CornerRadius="20" BorderThickness="0,0,0,1" BorderBrush="#00adff">
                                <StackPanel Height="40" Orientation="Horizontal" VerticalAlignment="Center" >
                                    <Rectangle RadiusX="5" RadiusY="5" Width="30" Height="30" Stroke="White" StrokeThickness="2" Margin="10,0,0,0">
                                        <Rectangle.Fill>
                                            <ImageBrush ImageSource="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Fill"/>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <TextBlock FontFamily="/Resources/#Rex" FontWeight="Bold" Text="{TemplateBinding Content}" HorizontalAlignment="Left" Foreground="White" Margin="5,0,0,0" VerticalAlignment="Center" FontSize="16" />
                                    <Button Width="{TemplateBinding Width}" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center" VerticalAlignment="Center" Style="{StaticResource ButtonNoEffect}" Margin="50,0,10,0">
                                        <i:Interaction.Behaviors>
                                            <local:DropDownButtonBehavior/>
                                        </i:Interaction.Behaviors>
                                        <Button.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock FontFamily="/Resources/#FontAwesome" Text="" Foreground="White"/>
                                            </StackPanel>
                                        </Button.Content>
                                        <Button.ContextMenu>
                                            <ContextMenu Style="{StaticResource ContextMenuStyle}" HorizontalOffset="25" VerticalOffset="30" HorizontalAlignment="Center" VerticalAlignment="Center"  HorizontalContentAlignment="Center" Width="150">
                                                <MenuItem Click="OpenProfile" Style="{StaticResource ContextMenuItem}" Margin="0,2,0,0" Header="&#xf007; Профил"/>
                                                <MenuItem Click="OpenRanking" Style="{StaticResource ContextMenuItem}" VerticalAlignment="Center" Margin="0,2,0,0" Header="&#xf091; Класация"/>
                                                <Separator Style="{StaticResource MySeparatorStyle}"/>
                                                <MenuItem Click="SignOut" Style="{StaticResource ContextMenuItem}" Margin="0,2,0,0" Header="&#xf08b; Изход"/>
                                            </ContextMenu>
                                        </Button.ContextMenu>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="ButtonAnswerOneAndTwo" TargetType="{x:Type Button}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Margin" Value="0,15,0,5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="White" Height="30" Background="#009be4" CornerRadius="15">
                            <Border.BitmapEffect>
                                <DropShadowBitmapEffect Direction="270" Color="#4db4e5" ShadowDepth="3" Softness="0"/>
                            </Border.BitmapEffect>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="8,0,8,0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Margin" Value="0,17,0,3"/>
                            <Setter Property="BorderBrush" Value="Orange" TargetName="ButtonBorder"/>
                            <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButttonsStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ButtonGradient}"/>
        <Setter Property="Foreground" Value="#003650"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontFamily" Value="/Resources/#Rex"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="5,0,5,0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowUp">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(Button.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="40"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ShowDown">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetProperty="(Button.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="35"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border CornerRadius="5,5,0,0" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource BorderGradient}">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5,5,0,0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*"/>
                                    <RowDefinition Height="0.5*"/>
                                </Grid.RowDefinitions>
                                <ContentPresenter VerticalAlignment="Center" Grid.RowSpan="2" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowDown}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowUp}"/>
                            </Trigger.EnterActions>
                            <Trigger.Setters>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger.Setters>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    

    <!--End Button Styles-->
</ResourceDictionary>