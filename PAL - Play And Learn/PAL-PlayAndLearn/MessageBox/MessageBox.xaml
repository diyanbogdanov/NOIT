<Window
  x:Name="MessageBoxWindow"
  x:Class="WPFMessageBox.MessageBox"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  MaxWidth="500"
  AllowsTransparency="True"
  Background="Transparent"
  Closing="MessageBoxWindow_Closing"
  Loaded="Window_Loaded"
  MouseDown="Window_MouseDown"
  RenderTransformOrigin="0.5, 0.5"
  ResizeMode="NoResize"
  ShowInTaskbar="False"
  SizeToContent="WidthAndHeight"
  Title="MessageBox"
  WindowStartupLocation="CenterOwner"
  WindowStyle="None">
    <Window.RenderTransform>
        <ScaleTransform x:Name="Scale"/>
    </Window.RenderTransform>
    <Window.Resources>
        <!-- Brushes -->
        <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#0078af" Offset="0"/>
            <GradientStop Color="#00adff" Offset="1"/>
        </LinearGradientBrush>
        <!-- Styles -->
        <Style TargetType="Label">
            <Setter Property="VerticalContentAlignment" Value="Center"/>            
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="Image">
            <Setter Property="Height" Value="32"/>
            <Setter Property="Width" Value="32"/>
            <Setter Property="Margin" Value="3"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Padding" Value="10,5,10,5"/>
            <Setter Property="Margin" Value="5,15,5,15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Name="ButtonBorder" BorderThickness="2,2,2,2" BorderBrush="#ff6f0f" Height="30" Background="#009be4" CornerRadius="4">
                                <Border.BitmapEffect>
                                    <DropShadowBitmapEffect Direction="270" Color="#ff7b23" ShadowDepth="3" Softness="0"/>
                                </Border.BitmapEffect>
                            </Border>
                            <ContentPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0,5,0"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Margin" Value="5,17,5,13" />
                                <Setter Property="BitmapEffect" Value="{x:Null}" TargetName="ButtonBorder"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Animation -->
        <Storyboard x:Key="LoadAnimation">
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.15"
        From="0.6"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
        To="1.1"/>
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.15"
        From="0.6"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
        To="1.1"/>
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.15"
        From="0"
        Storyboard.TargetName="MessageBoxWindow"
        Storyboard.TargetProperty="(Window.Opacity)"
        To="1"/>
            <DoubleAnimation
        BeginTime="00:00:00.15"
        Duration="00:00:00.1"
        From="1.1"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
        To="1"/>
            <DoubleAnimation
        BeginTime="00:00:00.15"
        Duration="00:00:00.1"
        From="1.1"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
        To="1"/>
        </Storyboard>
        <Storyboard x:Key="UnloadAnimation">
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.2"
        From="1"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleX)"
        To="0.6"/>
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.2"
        From="1"
        Storyboard.TargetName="Scale"
        Storyboard.TargetProperty="(ScaleTransform.ScaleY)"
        To="0.6"/>
            <DoubleAnimation
        AccelerationRatio="0.4"
        Duration="00:00:00.2"
        From="1"
        Storyboard.TargetName="MessageBoxWindow"
        Storyboard.TargetProperty="(Window.Opacity)"
        To="0"/>
        </Storyboard>
    </Window.Resources>
    <!-- Border with Margin = 50 to allow the animation to grow beyond the window's original size. 
  If this was omitted the window would just get cropped when it reached it's original size and try to grow-->
    <Border
    Margin="50"
    Background="{StaticResource BackgroundBrush}"
    BorderBrush="White"
    BorderThickness="2"
    Padding="7">
        <DockPanel LastChildFill="True">
            <Expander
        x:Name="DetailsExpander"
        Margin="0,7,0,0"
        DockPanel.Dock="Bottom"
        Header="Details">
                <DockPanel Margin="3" LastChildFill="True">
                    <TextBox
            x:Name="DetailsText"
            MaxHeight="275"
            IsReadOnly="True"
            IsReadOnlyCaretVisible="True"
            TextWrapping="Wrap"
            VerticalScrollBarVisibility="Auto"/>
                </DockPanel>
            </Expander>
            <!-- placeholder for the buttons-->
            <StackPanel
        x:Name="ButtonsPanel"
        HorizontalAlignment="Center"
        DockPanel.Dock="Bottom"
        Orientation="Horizontal"/>
            <Image x:Name="ImagePlaceholder" DockPanel.Dock="Left"/>
            <!-- The label contains a text block to enable text wrapping-->
            <Label x:Name="MessageLabel" DockPanel.Dock="Right">
                <TextBlock x:Name="MessageText" TextWrapping="Wrap" TextAlignment="Center"/>
            </Label>
        </DockPanel>
    </Border>
</Window>